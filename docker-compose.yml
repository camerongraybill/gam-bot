services:
  db:
    image: postgres:14
    restart: always
    volumes:
      - ${DATA_MOUNT}/pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
  web:
    image: $BOT_IMAGE:$BOT_TAG
    restart: always
    ports:
      - "$HTTP_PORT:8000"
    entrypoint: "manage runserver 0.0.0.0:8000"
    environment:
      - DB_PASSWORD=$POSTGRES_PASSWORD
      - DB_USER=$POSTGRES_USER
      - DB_NAME=$POSTGRES_DB
      - DB_PORT=5432
      - DB_HOST=db
      - SECRET_KEY
      - DEBUG
      - ALLOWED_HOST
    depends_on:
      - collectstatic
  bot:
    image: $BOT_IMAGE:$BOT_TAG
    restart: always
    entrypoint: "manage run_discord_bot"
    environment:
      - DB_PASSWORD=$POSTGRES_PASSWORD
      - DB_USER=$POSTGRES_USER
      - DB_NAME=$POSTGRES_DB
      - DB_PORT=5432
      - DB_HOST=db
      - DISCORD_KEY
      - DISCORD_COMMAND_PREFIX
      - SECRET_KEY
      - DEBUG
      - ALLOWED_HOST
    depends_on:
      - migrate
  migrate:
    image: $BOT_IMAGE:$BOT_TAG
    entrypoint: "manage migrate --no-input"
    environment:
      - DB_PASSWORD=$POSTGRES_PASSWORD
      - DB_USER=$POSTGRES_USER
      - DB_NAME=$POSTGRES_DB
      - DB_PORT=5432
      - DB_HOST=db
      - SECRET_KEY
      - DEBUG
      - ALLOWED_HOST
    depends_on:
      - db
    restart: on-failure
  collectstatic:
    image: $BOT_IMAGE:$BOT_TAG
    entrypoint: "manage collectstatic --no-input"
    volumes:
      - ${DATA_MOUNT}/static:/static_files
    environment:
      - DB_PASSWORD=$POSTGRES_PASSWORD
      - DB_USER=$POSTGRES_USER
      - DB_NAME=$POSTGRES_DB
      - DB_PORT=5432
      - DB_HOST=db
      - SECRET_KEY
      - DEBUG
      - STATIC_ROOT=/static_files
      - ALLOWED_HOST
    depends_on:
      - migrate
    restart: on-failure
